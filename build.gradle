plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'co.kr.staralba'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// QueryDSL Version
def queryDSLVersion = '4.2.2'
// QueryDSL PATH
def generated = "src/main/generated"

dependencies {
    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    // validation 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.4.1'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    // QueryDSL - DSL(Domain Specific Language)
    compile("com.querydsl:querydsl-core:${queryDSLVersion}")
    compile("com.querydsl:querydsl-jpa:${queryDSLVersion}")
    compile("com.querydsl:querydsl-apt:${queryDSLVersion}")
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'

    runtimeOnly 'mysql:mysql-connector-java'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor(
            "com.querydsl:querydsl-apt:${queryDSLVersion}:jpa",
            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
            "javax.annotation:javax.annotation-api",
            "org.projectlombok:lombok"
    )
    //mysql
    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}
